@startuml
skinparam class {
  BackgroundColor<<Service>> LightGreen
  BorderColor<<Service>> Tomato
  BackgroundColor<<Entity>> Wheat
  BorderColor<<Entity>> Tomato
}
skinparam stereotypeCBackgroundColor YellowGreen
skinparam stereotypeCBackgroundColor<< Foo >> DimGray

' Entities
class Borrower <<Entity>> {
  + name
  + apply()
  '+ creditCheck()
  '+ store()
  + trackHistory()
  '+ displayReport()
}
class OperatingAccount <<Entity>> {
}
class CapitalAccount <<Entity>>{
} 

class AccountMgr <<Entity>>{
}
class Mortgage <<Entity>>{
  'Principal
  'Term
}
abstract class Account <<Entity>>{
  'AccountNumber
  'isDelinquent
}

class RealEstate <<Entity>> { 
}
class Investment <<Entity>>{
}

abstract  class Asset <<Entity>> {
  int acctNumber
  Statement stmt
  Currency currentValue()
}

class Transaction <<Entity>> {
  Amount
}

' examples of DI
class CSVReport {
}
class XLSReport {
}
class PDFReport {
}

Report <|.. CSVReport
Report <|.. XLSReport
Report <|.. PDFReport

' Values
abstract class Report <<Value>> {
+ create(List<Transaction>): boolean
}

' examples of ISP
class UI <<Interface>> {
}

class AccountUI <<Service>> {
}

class CustomerUI <<Service>> {
}
UI <|.. CustomerUI
UI <|.. AccountUI
UI <|.. Report


' Services
class CalculateInterest <<Service>> {
}
class SendInvoice <<Service>> {
}
class CreditCheck <<Service>> {
}
class Display <<Service>> {
}

class DataStore <<Service>> {
}

' relations
Account <|-- OperatingAccount
Account <|-- CapitalAccount
Asset <|-- Investment
Asset <|-- Mortgage
Asset <|-- RealEstate
Report -- Display
@enduml